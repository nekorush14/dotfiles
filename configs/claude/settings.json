{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "List(*)",
      "Fetch(https://*)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(make:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(bat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(tar:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(whoami:*)",
      "Bash(pwd:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(duf:*)",
      "Bash(date:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(ln:*)",
      "Bash(touch:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(diff:*)",
      "Bash(cmp:*)",
      "Bash(rsync:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(ping:*)",
      "Bash(netstat:*)",
      "Bash(lsof:*)",
      "Bash(brew:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(pip:*)",
      "Bash(poetry:*)",
      "Bash(helm:*)",
      "Bash(terraform:*)",
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(go fmt:*)",
      "Bash(gofmt:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh run view:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue edit:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git remote set-url:*)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(git cherry-pick:*)",
      "Bash(bundle exec rspec:*)",
      "Bash($HOME/.rbenv/shims/bundle exec rspec:*)",
      "Bash(claude mcp list:*)",
      "Bash(safe-rm:*)",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__search_files",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__find_file",
      "mcp__serena__find_referencing_symbols",
      "mcp__serena__find_symbol",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__list_dir",
      "mcp__serena__list_memories",
      "mcp__serena__read_file",
      "mcp__serena__read_memory",
      "mcp__serena__read_text_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__think_about_whether_you_are_done"
    ],
    "deny": [
      "Bash(rm -rf:*)"
    ]
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "osascript -e 'display notification \"Claude Code request to grant a permission\" with title \"ðŸš§ Claude Code\" subtitle \"Request permission\" sound name \"Glass\"'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "osascript -e 'display notification \"Task completed\" with title \"âœ… Claude Code\" subtitle \"Completed\" sound name \"Hero\"'"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/rubocop-hook.sh"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "~/.claude/statusline.ts",
    "padding": 0
  },
  "alwaysThinkingEnabled": true,
  "max_tokens": 8192,
  "temperature": 0.1,
  "preferred_language": "japanese",
  "code_style": {
    "use_spaces": true,
    "line_ending": "lf"
  },
  "development": {
    "auto_lint": true,
    "auto_test": false,
    "verbose_output": false
  },
  "project_preferences": {
    "shell": "zsh",
    "editors": [
      "vscode-insiders",
      "cursor",
      "zed",
      "neovim"
    ],
    "package_manager": "auto-detect"
  }
}
